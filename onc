#!/bin/bash

set -e

image_name=$1
if [ -z "${image_name}" ];
then
    echo "Must specify a container image" >&2
    exit 1
fi
shift

# split container name into name components
IFS=/ read -ra image_name_components <<< "${image_name}"

last_name_component=${image_name_components[-1]}
if [[ ${last_name_component} == .* ]]; then
  container_label=${last_name_component}
  if [[ ${last_name_component} == . ]]; then
    last_name_component=
  fi
  image_name_components[-1]=Dockerfile${last_name_component}
  filename=$(printf "/%s" "${image_name_components[@]}")
  Dockerfile=$(python -c 'import os,sys; print os.path.abspath(sys.argv[1])' ${filename:1})
  commit_name=${Dockerfile}
  image_name=$(echo ${Dockerfile:1} | tr A-Z a-z)
  docker build --file ${Dockerfile} --tag ${image_name} $(dirname ${Dockerfile})
else
  commit_name=${image_name}
  container_label=${image_name}
fi


workdir=$(pwd)

homedir=${workdir}/onc-home
if [ ! -d ${homedir} ]; then
  mkdir ${homedir}
  git -C ${homedir} init --quiet
  cat > ${homedir}/.bashrc <<EOF
export PATH=\${PATH}:${workdir}/bin
export PS1="\${ONCONTAINER}:\\\${PWD#*} $ "
EOF
  cat > ${homedir}/.profile <<EOF
export PATH=\${PATH}:${workdir}/bin
export PS1="\${ONCONTAINER}:\\\${PWD#*} $ "
EOF
  git -C ${homedir} add --all
  git -C ${homedir} commit --quiet --message='Setup home directory'
fi

userid=`id --user`
groupid=`id --group`
groups_adds=
for group in $(id --groups); do
  if [ ${group} != ${groupid} ]; then
    groups_adds="${groups_adds} --group-add ${group}"
  fi
done

docker run -it --rm --user=${userid}:${groupid} ${groups_adds} \
  --mount type=bind,src=${workdir},dst=${workdir} -w=${workdir} \
  --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
  --mount type=bind,src=/etc/passwd,dst=/etc/passwd,readonly \
  --mount type=bind,src=/etc/shadow,dst=/etc/shadow,readonly \
  --mount type=bind,src=/etc/group,dst=/etc/group,readonly \
  --mount type=bind,src=/etc/gshadow,dst=/etc/gshadow,readonly \
  --mount type=bind,src=/etc/sudoers,dst=/etc/sudoers,readonly \
  --network host \
  --env "HOME=${workdir}/onc-home" \
  --env "ONCONTAINER=${container_label}" \
  --env "ENV=${homedir}/.profile" \
  --env "SHINIT=${homedir}/.profile" \
  --env "GOPATH=${homedir}/gopath" \
  --env "GOBIN=${workdir}/bin" \
	${image_name} "${@}"

if [ "${@}" ]; then
  args=$(printf '%q ' "${@}")
else
  args=''
fi
git -C ${homedir} add --all
cmds=
if [ -r ${homedir}/.bash_history ]; then
  cmds=$(git -C ${homedir} diff --staged --unified=0 .bash_history | sed -e '1,/^@@/d' )
fi
if [ ! "${cmds}" -a -r ${homedir}/.ash_history ]; then
  cmds=$(git -C ${homedir} diff --staged --unified=0 .ash_history | sed -e '1,/^@@/d' )
fi
git -C ${homedir} commit --quiet --allow-empty --message="${commit_name} ${args}
${cmds}"
