#!/bin/bash

set -e

userid=$(id --user)
groupid=$(id --group)
username=$(id --user --name)
groups_adds=
for group in $(id --groups); do
  if [ ${group} != ${groupid} ]; then
    groups_adds="${groups_adds} --group-add ${group}"
  fi
done

docker_args=

arg=$1
while [[ $1 == -* ]]; do
  if [[ $1 == --verbose ]]; then
    set -x
  else
    docker_args="${docker_args} $1"
  fi
  shift
done

image_name=$1

if [ -z "${image_name}" ];
then
    echo "Expecting a container image or Dockerfile" >&2
    exit 1
fi
shift

if [[ ${image_name} == .* ]] || [[ ${image_name} == /* ]]; then
  Dockerfile=$(python -c 'import os,sys; print os.path.abspath(sys.argv[1])' ${image_name})
  if [[ ! -f ${Dockerfile} ]]; then
    echo "Expecting a container image or Dockerfile" >&2
    exit 1
  fi
  commit_name=${Dockerfile}
  image_name=$(echo ${Dockerfile:1} | tr A-Z a-z)
  onc_image_name=${Dockerfile/#$HOME/\~}
  docker build --file ${Dockerfile} --tag ${image_name} $(dirname ${Dockerfile})
else
  commit_name=${image_name}
  onc_image_name=${image_name}
fi

workdir=$(pwd)

tmpdir=/tmp/onc.$$
mkdir ${tmpdir}
chmod 700 ${tmpdir}

homedir=${workdir}/onc-home
if [ ! -d ${homedir} ]; then
  mkdir ${homedir}
  git -C ${homedir} init --quiet
  cat > ${homedir}/.bashrc <<EOF
export PATH=\${PATH}:${workdir}/bin
export PS1="\${ONC_IMAGE_NAME}:\${HOSTNAME}:\\\${PWD#$HOME/} $ "
EOF
  cat > ${homedir}/.profile <<EOF
export PATH=\${PATH}:${workdir}/bin
export PS1="\${ONC_IMAGE_NAME}:\${HOSTNAME}:\\\${PWD#$HOME/} $ "
EOF
  git -C ${homedir} add --all
  git -C ${homedir} commit --quiet --message='Setup home directory'
fi

sed -e "s@:${HOME}:@:${homedir}:@" /etc/passwd > ${tmpdir}/passwd

docker run -it --rm --user=${userid}:${groupid} ${groups_adds} \
  --mount type=bind,src=${workdir},dst=${workdir} -w=${workdir} \
  --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
  --mount type=bind,src=${tmpdir}/passwd,dst=/etc/passwd,readonly \
  --mount type=bind,src=/etc/shadow,dst=/etc/shadow,readonly \
  --mount type=bind,src=/etc/group,dst=/etc/group,readonly \
  --mount type=bind,src=/etc/gshadow,dst=/etc/gshadow,readonly \
  --mount type=bind,src=/etc/sudoers,dst=/etc/sudoers,readonly \
  --env "HOME=${homedir}" \
  --env "ONC_IMAGE_NAME=${onc_image_name}" \
  --env "ENV=${homedir}/.profile" \
  --env "SHINIT=${homedir}/.profile" \
  --env "GOPATH=${homedir}/gopath" \
	${docker_args} ${image_name} "${@}"

rm -r ${tmpdir}

if [ "${*}" ]; then
  args=$(printf '%q ' "${@}")
else
  args=''
fi
git -C ${homedir} add --all
cmds=
if [ -r ${homedir}/.bash_history ]; then
  cmds=$(git -C ${homedir} diff --staged --unified=0 .bash_history | sed -e '1,/^@@/d' )
fi
if [ ! "${cmds}" -a -r ${homedir}/.ash_history ]; then
  cmds=$(git -C ${homedir} diff --staged --unified=0 .ash_history | sed -e '1,/^@@/d' )
fi
git -C ${homedir} commit --quiet --allow-empty --message="${commit_name} ${args}
${cmds}"
